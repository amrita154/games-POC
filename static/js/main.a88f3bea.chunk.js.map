{"version":3,"sources":["base-components/cards/index.js","components/container/index.js","components/choose-image/assets/images/apple.png","components/choose-image/assets/images/bananas.png","components/choose-image/assets/images/fruit.png","components/choose-image/assets/images/kiwi.png","components/choose-image/assets/images/grapes.png","components/choose-image/assets/images/strawberry.png","components/choose-image/data.js","components/choose-image/index.js","components/drag-drop-game/data.js","components/drag-drop-game/assets/images/apple.png","components/drag-drop-game/assets/images/bananas.png","components/drag-drop-game/assets/images/fruit.png","components/drag-drop-game/assets/images/kiwi.png","components/drag-drop-game/assets/images/grapes.png","components/drag-drop-game/assets/images/strawberry.png","components/drag-drop-game/dragItems.js","components/drag-drop-game/dropContainer.js","components/drag-drop-game/index.js","components/home/index.js","components/speech-game/data.js","components/speech-game/index.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","selected","image","onSelect","correct","className","style","backgroundColor","onClick","src","alt","id","Container","children","dummyData","name","Apple","Banana","Orange","correctImage","Kiwi","Grapes","Strawberry","ChooseImage","useState","setId","selectedImage","setSelectedImage","speechRef","useRef","console","log","display","alignItems","flexDirection","map","img","index","current","play","onSelectCard","length","opacity","text","ref","voice","dragObjects","DragItems","targetKey","label","window","width","innerWidth","height","innerHeight","randomtop","Math","floor","random","randomleft","dragData","marginTop","marginLeft","DropArea","items","setItems","onHit","e","prev","containerElem","visibility","borderWidth","borderStyle","position","top","left","item","DragDropGame","Home","justifyContent","to","gameData","object","action","animation","require","SpeechToText","useSpeechRecognition","transcript","resetTranscript","containerRef","useEffect","lottie","loadAnimation","container","animationData","loop","autoplay","stop","temp","split","toLowerCase","pause","SpeechRecognition","browserSupportsSpeechRecognition","alert","startListening","continuous","stopListening","destroy","Navigation","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a88f3bea.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nconst Cards = ({ selected=false,image,onSelect=()=>{},correct}) => {\n  return (\n    <div className=\"Cards\" style={{backgroundColor:selected?(correct?'green':'red'):'transparent'}} onClick={onSelect}>\n      <img src={image} alt=\"Icon\" id=\"icon\" />\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Container = ({children}) => {\n  return (\n    <div className=\"Container\">\n     {children}\n    </div>\n  );\n};\n\nexport default Container;\n","export default __webpack_public_path__ + \"static/media/apple.8733e25d.png\";","export default __webpack_public_path__ + \"static/media/bananas.5c6ec729.png\";","export default __webpack_public_path__ + \"static/media/fruit.8b8c962d.png\";","export default __webpack_public_path__ + \"static/media/kiwi.03d7eafc.png\";","export default __webpack_public_path__ + \"static/media/grapes.792eff62.png\";","export default __webpack_public_path__ + \"static/media/strawberry.8ec7fc68.png\";","import Apple from \"./assets/images/apple.png\";\nimport Banana from \"./assets/images/bananas.png\";\nimport Orange from \"./assets/images/fruit.png\";\nimport Kiwi from \"./assets/images/kiwi.png\";\nimport Grapes from \"./assets/images/grapes.png\";\nimport Strawberry from \"./assets/images/strawberry.png\";\n\n\nconst dummyData = [\n  {\n    id: 1,\n    name: \"Apple\",\n    image:[ Apple,Banana,Orange],\n    correctImage:0\n  },\n  {\n    id: 2,\n    name: \"banana\",\n    image:Banana,\n     image: [Apple,Banana,Orange],\n    correctImage:1\n  },\n  {\n    id: 3,\n    name: \"orange\",\n    image:[ Apple,Banana,Orange],\n    correctImage:2\n  },\n  {\n    id: 4,\n    name: \"kiwi\",\n   image:[ Kiwi,Banana,Orange],\n    correctImage:0\n  },\n  {\n    id: 5,\n    name: \"grapes\",\n   image:[ Apple,Banana,Grapes],\n    correctImage:2\n  },\n  {\n    id: 6,\n    name: \"strawberry\",\n   image:[ Apple,Strawberry,Orange],\n    correctImage:1\n  },\n];\n\nexport default dummyData;\n","import React, { useRef, useState } from \"react\";\nimport Cards from \"../../base-components/cards\";\nimport Speech from \"react-speech\";\n\nimport Container from \"../container\";\nimport dummyData from \"./data\";\n\nconst ChooseImage = () => {\n  const [id, setId] = useState(0);\n  const [selectedImage, setSelectedImage] = useState(-1);\n  const speechRef = useRef(null);\n\n  const onPressNext = () => {\n    if (id < dummyData.length - 1) {\n      setId(id + 1);\n    } else {\n      setId(-1);\n    }\n    setSelectedImage(-1);\n  };\n\n  const onSelectCard = (index) => {\n    setSelectedImage(index);\n    if (index === dummyData[id].correctImage) {\n      if (speechRef.current) {\n        speechRef.current.play();\n      }\n    }\n  };\n\n  console.log(selectedImage, \"id\");\n  return (\n    <Container>\n      {id >= 0 ? (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <h1> Choose the right picture for {dummyData[id].name}</h1>\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            {dummyData[id].image.map((img, index) => {\n              const selected = index === selectedImage;\n              const correct =\n                selected && selectedImage === dummyData[id].correctImage;\n              return (\n                <Cards\n                  image={img}\n                  selected={selected}\n                  onSelect={() => onSelectCard(index)}\n                  correct={correct}\n                />\n              );\n            })}\n          </div>\n          <button onClick={onPressNext}>Next</button>\n          <div style={{ opacity: 0 }}>\n            <Speech\n              text={dummyData[id].name}\n              ref={speechRef}\n              voice=\"Google UK English Female\"\n            />\n          </div>\n        </div>\n      ) : (\n        <h1>Completed</h1>\n      )}\n    </Container>\n  );\n};\n\nexport default ChooseImage;\n","import Apple from \"./assets/images/apple.png\";\nimport Banana from \"./assets/images/bananas.png\";\nimport Orange from \"./assets/images/fruit.png\";\nimport Kiwi from \"./assets/images/kiwi.png\";\nimport Grapes from \"./assets/images/grapes.png\";\nimport Strawberry from \"./assets/images/strawberry.png\";\n\n\nconst dragObjects = [\n  {\n    id: 1,\n    name: \"apple\",\n    image: Apple,\n  },\n  {\n    id: 2,\n    name: \"banana\",\n    image:Banana,\n  },\n  {\n    id: 3,\n    name: \"orange\",\n    image:Orange,\n  },\n  {\n    id: 4,\n    name: \"kiwi\",\n    image:Kiwi,\n  },\n  {\n    id: 5,\n    name: \"grapes\",\n    image:Grapes,\n  },\n  {\n    id: 6,\n    name: \"strawberry\",\n    image: Strawberry,\n  },\n];\n\nexport default dragObjects;\n","export default __webpack_public_path__ + \"static/media/apple.8733e25d.png\";","export default __webpack_public_path__ + \"static/media/bananas.5c6ec729.png\";","export default __webpack_public_path__ + \"static/media/fruit.8b8c962d.png\";","export default __webpack_public_path__ + \"static/media/kiwi.03d7eafc.png\";","export default __webpack_public_path__ + \"static/media/grapes.792eff62.png\";","export default __webpack_public_path__ + \"static/media/strawberry.8ec7fc68.png\";","import React from \"react\";\nimport { DragDropContainer } from \"react-drag-drop-container\";\n\nconst DragItems = ({targetKey,label, image }) => {\n\n     const { innerWidth: width, innerHeight: height } = window;\n\n    var randomtop = Math.floor(Math.random() *(300));\n    var randomleft = Math.floor(Math.random() * (400));\n   \n\n    console.log(\"randome\",randomleft,randomtop,width,height)\n  \n    return (\n    <DragDropContainer\n      targetKey={targetKey}\n      dragData={{ label: label }}\n      // onDrop={some method}\n      // onDragStart={some method}\n      // onDrag={some method}\n      // onDragEnd={some method}\n    >\n      <div style={{ \n        //   position:'absolute',\n          marginTop: randomtop,\n        marginLeft: randomleft,\n        // zIndex:2\n        }}>\n        <img src={image} height={100} width={100} />\n      </div>\n    </DragDropContainer>\n  );\n};\n\nexport default DragItems;\n","import React, { useRef, useState } from \"react\";\nimport { DropTarget } from \"react-drag-drop-container\";\nimport Speech from \"react-speech\";\n\nconst DropArea = () => {\n  const [items, setItems] = useState([]);\n  const speechRef = useRef(null);\n\n  const onHit = (e) => {\n    setItems((prev) => [...prev, e.dragData.label]);\n    console.log(\"ref\", speechRef.current);\n    if (speechRef.current) {\n      speechRef.current.play();\n    }\n    e.containerElem.style.visibility = \"hidden\";\n  };\n\n  return (\n    <DropTarget targetKey=\"box\" onHit={onHit}>\n      <div\n        style={{\n          height: 200,\n          width: 200,\n          borderWidth: 1,\n          borderStyle: \"dashed\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n        }}\n      >\n        {items.map((item) => {\n          return <p>{item}</p>;\n        })}\n        <div style={{opacity:0}}>\n        <Speech\n          text={items.length > 0 ? items[items.length - 1] : \"\"}\n          ref={speechRef}\n          voice=\"Google UK English Female\"\n        />\n        </div>\n      </div>\n    </DropTarget>\n  );\n};\n\nexport default DropArea;\n","import React from \"react\";\nimport Container from \"../container\";\nimport dragObjects from \"./data\";\nimport DragItems from \"./dragItems\";\nimport DropArea from \"./dropContainer\";\nimport \"./styles.css\"\n\nconst DragDropGame = () => {\n  return (\n    <Container>\n      {dragObjects.map((item) => {\n        return (\n          <DragItems targetKey=\"box\" label={item.name} image={item.image} />\n        );\n      })}\n      <DropArea/>\n    </Container>\n  );\n};\n\nexport default DragDropGame;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Container from \"../container\";\n\nconst Home = () => {\n  return (\n      <Container>\n    <div style={{display:'flex',flexDirection:'column',justifyContent:'space-between',alignItems:'flex-start'}}>\n      <NavLink to=\"/game1\">Game 1</NavLink>\n      <NavLink to=\"/game2\">Game 2</NavLink>\n       <NavLink to=\"/game3\">Game 3</NavLink>\n    </div>\n    </Container>\n  );\n};\n\nexport default Home;\n","const gameData=[\n    {\n        id:1,\n        object:\"Bird\",\n        action:\"fly\",\n        animation:require('./../../assets/animation/flappy-bird-delivering-a-message.json'),\n\n    },\n    {\n        id:2,\n        object:\"Tiger\",\n        action:\"move\",\n        animation:require('./../../assets/animation/lion-running.json'),\n    },{\n         id:3,\n        object:\"Rain\",\n        action:\"start rainfall\",\n        animation:require('./../../assets/animation/rain-animation-with-umbrella.json'),\n    }\n]\n\n\nexport default gameData;","import React, { useEffect, useRef, useState } from \"react\";\nimport lottie from \"lottie-web\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport gameData from './data';\nimport Container from \"../container\";\n\nconst SpeechToText = () => {\n  const { transcript, resetTranscript } = useSpeechRecognition();\n  const containerRef = useRef(null);\n  const [id,setId]=useState(0);\n\n  const onPressNext=()=>{\n      if(id<2){\n          setId(id+1);\n      }\n      else{\n          setId(0);\n      }\n      resetTranscript();\n      lottie.destroy(\"animation\");\n  }\n\n  useEffect(() => {\n    lottie.loadAnimation({\n      container: containerRef.current,\n      animationData: gameData[id].animation,\n      loop:true,\n      autoplay:true,\n      name:\"animation\"\n    });\n      return () => lottie.stop();\n  },[id]);\n\n  useEffect(() => {\n      console.log(\"transcript\",transcript);\n      let temp=[];\n     temp=transcript.split(' ');\n    if (temp[temp.length-1]===gameData[id].object.toLowerCase()||temp[temp.length-1]===gameData[id].object) {\n      lottie.play(\"animation\");\n    } else {\n      lottie.pause(\"animation\");\n      resetTranscript();\n    }\n  }, [transcript,id]);\n\n  useEffect(() => {\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n      alert(\"Browser does not support speech recognition\");\n    }\n    SpeechRecognition.startListening({ continuous: true });\n    console.log(\"Now listening...\");\n    return () => {\n      SpeechRecognition.stopListening();\n      console.log(\"Stopped Listening\");\n    };\n  }, []);\n\n\n  return (\n    <Container>\n      <div style={{display:'flex',alignItems:'center',flexDirection:'column'}}>\n      <h1> Speak {gameData[id].object} to {gameData[id].action}</h1>\n      <h3>{transcript}</h3>\n      <div id=\"animation\" ref={containerRef} style={{height:'20%',width:'20%',}}/>\n      <button onClick={onPressNext}>Next</button>\n      </div>\n    </Container>\n  );\n};\n\nexport default SpeechToText;\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport ChooseImage from \"../components/choose-image\";\nimport DragDropGame from \"../components/drag-drop-game\";\nimport Home from \"../components/home\";\nimport SpeechToText from \"../components/speech-game\";\n\nconst Navigation = () => {\n  return (\n   \n      <BrowserRouter>\n        <div>\n          <Routes>\n            <Route path=\"/games-POC\"  element={<Home/>}/>\n            <Route path=\"/games-POC/game1\" element={<DragDropGame/>} />\n            <Route path=\"/games-POC/game2\" element={<SpeechToText/>} />\n           <Route path=\"/games-POC/game3\" element={<ChooseImage/>} />\n          </Routes>\n        </div>\n      </BrowserRouter>\n   \n  );\n};\n\nexport default Navigation;\n","import \"./App.css\";\nimport Navigation from \"./routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n <Navigation/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}